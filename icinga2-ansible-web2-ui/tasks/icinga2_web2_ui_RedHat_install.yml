---
- name: Install Icinga2 IDO modules on RedHat OS family
  yum: name=icinga2-ido-mysql
       state=latest
  when: ansible_pkg_mgr == "yum"

- name: Install Icinga2 IDO modules on RedHat OS family (Fedora > 22)
  dnf: name=icinga2-ido-mysql
       state=latest
  when: ansible_pkg_mgr == "dnf"

- name: Create a IDO Database for Icinga2
  mysql_db: name={{ icinga2_db }}
            state=present
  register: icinga_ido_db

- name: Create Icinga2 IDO Database User and configure Grants
  mysql_user: name={{ icinga2_db_user }}
              password={{ icinga2_db_pass }}
              state=present
              priv="{{ icinga2_db }}.*:GRANT,INSERT,SELECT,UPDATE,DELETE,DROP,CREATE VIEW,INDEX,EXECUTE"

- name: Import the IDO Schema on Icinga Web Database (only once)
  mysql_db: name={{ icinga2_db }}
            state=import
            target={{ icinga2_web_mysql_schema_rh }}
  when: icinga_ido_db.changed == true

- name: Configure Icinga2 Ido Mysql Feature
  template: src=ido-mysql.conf.j2
            dest={{ icinga2_ido_mysql_conf }}
            backup=yes
            owner=icinga
            group=icinga
            mode=0640

- name: Enable Icinga2 Ido Mysql Feature
  command: "icinga2 feature enable ido-mysql"
  register: features_result
  changed_when: "'for these changes to take effect' in features_result.stdout"
  notify:
   - restart icinga2

- name: Install Icinga Web2 on RedHat OS family
  yum: name={{ item.package }}
       state=latest
       enablerepo={{ enablerepo }}
  with_items: "{{ icinga2_web2_ui_rpm }}"
  tags: icinga2-ansible-web2-ui-install
  when: ansible_pkg_mgr == "yum"

- name: Install Icinga Web2 on RedHat OS family
  dnf: name={{ item.package }}
       state=latest
       enablerepo={{ enablerepo }}
  with_items: "{{ icinga2_web2_ui_rpm }}"
  tags: icinga2-ansible-web2-ui-install
  when: ansible_pkg_mgr == "dnf"


- name: Create a Web Database for Icinga2
  mysql_db: name={{ icinga2_web2_db }}
            state=present
  register: icinga_web_db

- name: Create Icinga2 Web Database User and configure Grants
  mysql_user: name={{ icinga2_web2_db_user }}
              password={{ icinga2_web2_db_pass }}
              state=present
              priv="{{ icinga2_web2_db }}.*:GRANT,INSERT,SELECT,UPDATE,DELETE,DROP,CREATE VIEW,INDEX,EXECUTE"

- name: Import the Web Schema on Icinga Web Database (only once)
  mysql_db: name={{ icinga2_web2_db }}
            state=import
            target={{ icinga2_web2_mysql_schema_rh }}
  when: icinga_web_db.changed == true

- name: Configure Icinga2 Ido Mysql Feature
  template: src=ido-mysql.conf.j2
            dest={{ icinga2_ido_mysql_conf }}
            backup=yes
            owner=icinga
            group=icinga
            mode=0640

- name: Create an icinga user icingaadmin with password
  command: echo "INSERT INTO icingaweb_user (name, active, password_hash) VALUES ('icingaadmin', 1, '{{ icinga_admin_password }}')" | mysql -p icinga2_web2_db
  register: mysql_insert_output
  when: icinga_admin_password is defined

- name: Set PHP date.timezone 
  lineinfile: dest=/etc/php.ini state=present regexp='^;date\.timezone' line='date.timezone="Europe/London"'

- name: Fix SELinux context for /etc/icingaweb2 (make it writeable by apache)
  command: "chcon -R -t httpd_sys_rw_content_t /etc/icingaweb2/"
  register: chcon_result

- name: Create the directory /etc/icingaweb2/modules/monitoring
  file: path=/etc/icingaweb2/modules/monitoring state=directory mode=2770

- name: Create the file /etc/icingaweb2/resources.ini
  template: src=resources.ini.j2
            dest=/etc/icingaweb2/resources.ini
            backup=yes
            owner=root
            group=icingaweb2
            mode=0640

- name: Create the file /etc/icingaweb2/config.ini
  template: src=config.ini.j2
            dest=/etc/icingaweb2/config.ini
            backup=yes
            owner=root
            group=icingaweb2
            mode=0640

- name: Create the file /etc/icingaweb2/authentication.ini
  template: src=authentication.ini.j2
            dest=/etc/icingaweb2/authentication.ini
            backup=yes
            owner=root
            group=icingaweb2
            mode=0640


- name: Create the file /etc/icingaweb2/roles.ini
  template: src=roles.ini.j2
            dest=/etc/icingaweb2/roles.ini
            backup=yes
            owner=root
            group=icingaweb2
            mode=0640

- name: Create the file /etc/icingaweb2/modules/monitoring/config.ini
  template: src=modules/monitoring/config.ini.j2
            dest=/etc/icingaweb2/modules/monitoring/config.ini
            backup=yes
            owner=root
            group=icingaweb2
            mode=0640

- name: Create the file /etc/icingaweb2/modules/monitoring/backends.ini
  template: src=modules/monitoring/backends.ini.j2
            dest=/etc/icingaweb2/modules/monitoring/backends.ini
            backup=yes
            owner=root
            group=icingaweb2
            mode=0640

- name: Create the file /etc/icingaweb2/modules/monitoring/commandtransports.ini
  template: src=modules/monitoring/commandtransports.ini.j2
            dest=/etc/icingaweb2/modules/monitoring/commandtransports.ini
            backup=yes
            owner=root
            group=icingaweb2
            mode=0640

- name: Restart HTTPD and Icinga2 to Apply the Configuration
  service: name={{ item }}
           state=restarted
           enabled=yes
  with_items:
    - httpd
    - icinga2

- name: Icinga Web2 Installation finished (RH)
  debug: msg="Now generate a token with 'icingacli setup token create' and go at http://IP//icingaweb2/setup to continue the installation"
  tags: icinga2-ansible-web2-ui-install
